{"version":3,"sources":["AudioRecorder.js","VideoRecorder.js","App.js","index.js"],"names":["AudioRecorder","script","document","createElement","type","innerText","body","appendChild","id","style","backgroundColor","padding","React","Component","VideoRecorder","App","state","show","audioOnly","onShow","localStorage","removeItem","setState","onHide","onClick","v","this","video","getItem","display","flexDirection","alignItems","playsInline","src","value","ReactDOM","render","StrictMode","getElementById"],"mappings":"mOAwCeA,E,kLApCX,IAAMC,EAASC,SAASC,cAAc,UACtCF,EAAOG,KAAO,kBACdH,EAAOI,UAAP,0kDAwBAH,SAASI,KAAKC,YAAYN,K,+BAI1B,OACE,yBAAKO,GAAG,YAAYC,MAAO,CAACC,gBAAiB,QAASC,QAAS,U,GAjCzCC,IAAMC,WCsCnBC,E,kLApCX,IAAMb,EAASC,SAASC,cAAc,UACtCF,EAAOG,KAAO,kBACdH,EAAOI,UAAP,83DAwBAH,SAASI,KAAKC,YAAYN,K,+BAI1B,OACE,yBAAKO,GAAG,YAAYC,MAAO,CAACC,gBAAiB,QAASC,QAAS,U,GAjCzCC,IAAMC,W,QCyHnBE,G,kNA7GbC,MAAQ,CACNC,MAAM,EACNC,UAAW,M,EAGbC,OAAS,WACPC,aAAaC,WAAW,SACxBD,aAAaC,WAAW,SACxB,EAAKC,SAAS,CAACL,MAAM,K,EAGvBM,OAAS,WACP,EAAKD,SAAS,CAACL,MAAM,EAAOC,UAAW,Q,EAGzCM,QAAU,SAAAC,GACR,EAAKH,SAAS,CAACJ,UAAWO,K,uDAcnB,IAAD,SACoBC,KAAKV,MAAxBC,EADD,EACCA,KAAMC,EADP,EACOA,UACPS,EAAQP,aAAaQ,QAAQ,SAKnC,OACE,yBACEpB,GAAG,gBACHC,MAAO,CACLoB,QAAS,OACTC,cAAe,SACfC,WAAY,eAEd,qEACCJ,EACC,kBAAC,SAAD,CACEK,aAAW,EACXC,IAAKN,IAEL,gGACHV,GAAsB,OAAdC,EACP,2BAAOd,KAAK,SAAS8B,MAAM,4BAAQV,QAASE,KAAKH,SAC/C,KACFN,GAASC,EAEP,KADF,2BAAOd,KAAK,SAAS8B,MAAM,8EAAkBV,QAASE,KAAKP,SAE5DF,EACC,oCACe,OAAdC,EACC,oCACA,2BAAOd,KAAK,SAAS8B,MAAM,4BAAQV,QAAS,kBAAM,EAAKA,SAAQ,MAC/D,2BAAOpB,KAAK,SAAS8B,MAAM,4BAAQV,QAAS,kBAAM,EAAKA,SAAQ,OAG/D,qCACe,IAAdN,EACC,kBAAC,EAAD,MAEA,kBAAC,EAAD,QAKF,wC,GA5EMN,IAAMC,YCTxBsB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFnC,SAASoC,eAAe,W","file":"static/js/main.26ec2110.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass AudioRecorder extends React.Component {\r\n  componentDidMount () {\r\n    const script = document.createElement(\"script\");\r\n    script.type = \"text/javascript\";\r\n    script.innerText = `\r\n    console.log(\"NamSaeng's Camera!\");\r\n    var pipeParams = {size:{width:640,height:390}, qualityurl:\"avq/720p.xml\", accountHash:\"e8a9098088c1db348ae13b82a06941cc\", eid:\"M1zM10\", mrt:60, dup:1, ao:1};\r\n    PipeSDK.insert(\"custom-id\",pipeParams,function(recorderObject){\r\n      recorderObject.onUploadDone = function(recorderId, streamName, streamDuration, audioCodec, videoCodec, fileType, audioOnly, location){\r\n        var args = Array.prototype.slice.call(arguments);\r\n        console.log(\"uploading done \" + arguments);\r\n        localStorage.removeItem(\"thumb\");\r\n        localStorage.setItem(\"video\", \"https://eu1-addpipe.s3.eu-central-1.amazonaws.com/e8a9098088c1db348ae13b82a06941cc/\" + streamName + \".mp4\");\r\n      },\r\n      recorderObject.onDesktopVideoUploadSuccess = function(recorderId, filename,filetype,videoId,audioOnly,location){\r\n        var args = Array.prototype.slice.call(arguments);\r\n        console.log(\"uploading done \" + arguments);\r\n        localStorage.removeItem(\"thumb\");\r\n        localStorage.setItem(\"video\", \"https://eu1-addpipe.s3.eu-central-1.amazonaws.com/e8a9098088c1db348ae13b82a06941cc/\" + filename + \".mp4\");\r\n      },\r\n      recorderObject.onVideoUploadSuccess = function(recorderId, filename,filetype,videoId,audioOnly,location){\r\n        var args = Array.prototype.slice.call(arguments);\r\n        console.log(\"uploading mobile done \" + arguments);\r\n        localStorage.removeItem(\"thumb\");\r\n        localStorage.setItem(\"video\", \"https://eu1-addpipe.s3.eu-central-1.amazonaws.com/e8a9098088c1db348ae13b82a06941cc/\" + filename + \".mp4\");\r\n      }\r\n    });\r\n    `;\r\n    document.body.appendChild(script);\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div id=\"custom-id\" style={{backgroundColor: \"green\", padding: 10 }} />\r\n    );\r\n  }\r\n}\r\n\r\nexport default AudioRecorder;","import React from \"react\";\r\n\r\nclass VideoRecorder extends React.Component {\r\n  componentDidMount () {\r\n    const script = document.createElement(\"script\");\r\n    script.type = \"text/javascript\";\r\n    script.innerText = `\r\n    console.log(\"NamSaeng's Camera!\");\r\n    var pipeParams = {size:{width:640,height:390}, qualityurl:\"avq/720p.xml\", accountHash:\"e8a9098088c1db348ae13b82a06941cc\", eid:\"M1zM10\", mrt:60, dup:1};\r\n    PipeSDK.insert(\"custom-id\",pipeParams,function(recorderObject){\r\n      recorderObject.onUploadDone = function(recorderId, streamName, streamDuration, audioCodec, videoCodec, fileType, audioOnly, location){\r\n        var args = Array.prototype.slice.call(arguments);\r\n        console.log(\"uploading done \" + arguments);\r\n        localStorage.setItem(\"thumb\", \"https://eu1-addpipe.s3.eu-central-1.amazonaws.com/e8a9098088c1db348ae13b82a06941cc/\" + streamName + \".jpg\");\r\n        localStorage.setItem(\"video\", \"https://eu1-addpipe.s3.eu-central-1.amazonaws.com/e8a9098088c1db348ae13b82a06941cc/\" + streamName + \".mp4\");\r\n      },\r\n      recorderObject.onDesktopVideoUploadSuccess = function(recorderId, filename,filetype,videoId,audioOnly,location){\r\n        var args = Array.prototype.slice.call(arguments);\r\n        console.log(\"uploading done \" + arguments);\r\n        localStorage.setItem(\"thumb\", \"https://eu1-addpipe.s3.eu-central-1.amazonaws.com/e8a9098088c1db348ae13b82a06941cc/\" + filename + \".jpg\");\r\n        localStorage.setItem(\"video\", \"https://eu1-addpipe.s3.eu-central-1.amazonaws.com/e8a9098088c1db348ae13b82a06941cc/\" + filename + \".mp4\");\r\n      },\r\n      recorderObject.onVideoUploadSuccess = function(recorderId, filename,filetype,videoId,audioOnly,location){\r\n        var args = Array.prototype.slice.call(arguments);\r\n        console.log(\"uploading mobile done \" + arguments);\r\n        localStorage.setItem(\"thumb\", \"https://eu1-addpipe.s3.eu-central-1.amazonaws.com/e8a9098088c1db348ae13b82a06941cc/\" + filename + \".jpg\");\r\n        localStorage.setItem(\"video\", \"https://eu1-addpipe.s3.eu-central-1.amazonaws.com/e8a9098088c1db348ae13b82a06941cc/\" + filename + \".mp4\");\r\n      }\r\n    });\r\n    `;\r\n    document.body.appendChild(script);\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div id=\"custom-id\" style={{backgroundColor: \"green\", padding: 10 }} />\r\n    );\r\n  }\r\n}\r\n\r\nexport default VideoRecorder;","import React from 'react';\nimport AudioRecorder from './AudioRecorder';\nimport VideoRecorder from './VideoRecorder';\n//import 'codemirror/lib/codemirror.css';\n//import '@toast-ui/editor/dist/toastui-editor.css';\n\n//import { Editor } from '@toast-ui/react-editor';\nimport { Player } from 'video-react';\nimport \"video-react/dist/video-react.css\";\n\n//import \"https://cdn.addpipe.com/2.0/pipe.js\";\n//import \"https://cdn.addpipe.com/2.0/pipe.css\";\n\nclass App extends React.Component {\n  state = {\n    show: false,\n    audioOnly: null\n  };\n\n  onShow = () => {\n    localStorage.removeItem(\"thumb\");\n    localStorage.removeItem(\"video\");\n    this.setState({show: true});\n  };\n\n  onHide = () => {\n    this.setState({show: false, audioOnly: null});\n  }\n\n  onClick = v => {\n    this.setState({audioOnly: v});\n  }\n\n  /*\n  editorRef = React.createRef();\n\n  handleClick = () => {\n    console.log(this.editorRef.current.getInstance().getHtml());\n  };\n\n  handleFocus = () => {\n    console.log('focus!!');\n  };*/\n\n  render(){\n    const {show, audioOnly} = this.state;\n    const video = localStorage.getItem(\"video\");\n    // 음성 혹은 영상으로 입력하기 버튼을 누르면 show가 true가 된다.\n    // 하지만 audioOnly가 null이라면 음성과 영상 둘 중 선택하라는 메시지가 뜬다.\n    // show와 audioOnly가 둘 다 null이 아닌 boolean이라면, audioOnly의 값에 따라 음성/영상 레코더가 뜬다.\n    // 입력 완료 버튼을 누르면 show는 false가 되고, audioOnly는 null이 된다.\n    return (\n      <div \n        id=\"app_container\"\n        style={{\n          display: \"flex\", \n          flexDirection: \"column\", \n          alignItems: \"flex-start\"\n        }}>\n        <h1>비디오 테스트</h1>\n        {video ? (\n          <Player\n            playsInline\n            src={video}\n          />\n        ) : <span>업로드된된 비디오 없음</span>}\n        {show && audioOnly !== null ? (\n          <input type=\"button\" value=\"입력 완료\" onClick={this.onHide}/>\n        ) : null}\n        {!show && !audioOnly ? (\n          <input type=\"button\" value=\"음성 혹은 영상으로 입력하기\" onClick={this.onShow} />\n        ) : null}\n        {show ? (\n          <>\n          {audioOnly === null ? (\n            <>\n            <input type=\"button\" value=\"음성 입력\" onClick={() => this.onClick(true)} />\n            <input type=\"button\" value=\"영상 입력\" onClick={() => this.onClick(false)} />\n            </>\n          ) : (\n            <>\n            {audioOnly === true ? (\n              <AudioRecorder />\n            ) : (\n              <VideoRecorder />\n            )}\n            </>\n          )}\n          </>\n        ) : <h3>Off</h3>}\n      </div>\n    );\n    /*\n    <link rel=\"stylesheet\" href=\"//cdn.addpipe.com/2.0/pipe.css\" />\n    <script type=\"text/javascript\" src=\"//cdn.addpipe.com/2.0/pipe.js\"></script>\n    <script type=\"text/javascript\">\n    var pipeParams = {size:{width:640,height:390}, qualityurl:\"avq/720p.xml\", accountHash:\"e8a9098088c1db348ae13b82a06941cc\", eid:\"M1zM10\", mrt:60, dup:1};\n    PipeSDK.insert(\"custom-id\",pipeParams,function(recorderObject){});\n    </script>\n    return (\n      <div>\n        <div style={{width: 500, height: 300}}>\n          <Player\n            playsInline\n            poster=\"https://i.ytimg.com/vi/XxrTaalo6sU/original.jpg\"\n            src=\"https://media.w3.org/2010/05/sintel/trailer_hd.mp4\"\n          />\n        </div>\n        <Editor\n          initialValue=\"hello react editor world!\"\n          previewStyle=\"vertical\"\n          height=\"600px\"\n          initialEditType=\"markdown\"\n          useCommandShortcut={true}\n          ref={this.editorRef}\n          onFocus={this.handleFocus}\n        />\n        <button onClick={this.handleClick}>submit</button>\n      </div>\n    );*/\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}