{"version":3,"sources":["config.js","Recorder.js","App.js","index.js"],"names":["config","checkForInactiveTracks","disableLogs","getNativeBlob","ignoreMutedMedia","initCallback","mimeType","type","Recorder","state","initial","stream","recorder","file","recording","onClickDisplay","audioOnly","props","setState","navigator","mediaDevices","getUserMedia","audio","video","then","a","document","getElementById","srcObject","muted","play","catch","e","alert","onClickStart","RecordRTC","startRecording","onClickFinish","stopRecording","blob","getBlob","src","URL","createObjectURL","stop","destroy","onClickReset","onChangeFile","v","target","files","console","log","onClickCancel","onHide","this","style","width","height","display","flexDirection","alignItems","justifyContent","padding","backgroundColor","onClick","accept","onChange","id","controls","href","download","React","Component","App","showSelect","onClickAudio","onClickVideo","marginTop","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6e15c709.chunk.js","sourcesContent":["export const config = {\r\n  checkForInactiveTracks: false,\r\n  disableLogs: false,\r\n  getNativeBlob: false,\r\n  ignoreMutedMedia: false,\r\n  initCallback: null,\r\n  mimeType: \"video/mp4\",\r\n  type: \"video\"\r\n};","import React from \"react\";\r\nimport RecordRTC from 'recordrtc';\r\nimport { config } from './config';\r\n\r\nclass Recorder extends React.Component {\r\n  state = {\r\n    initial: true,\r\n    stream: null,\r\n    recorder: null,\r\n    file: null,\r\n    recording: null\r\n  };\r\n\r\n  onClickDisplay = () => {\r\n    const {audioOnly} = this.props;\r\n    const setState = config => this.setState(config);\r\n    // 마이크와 영상 권한을 얻는다.\r\n    this.setState({initial: false});\r\n    navigator.mediaDevices.getUserMedia(\r\n      audioOnly ? { audio: true } : { video: true, audio: true }\r\n    ).then(async function(stream){\r\n      setState({stream, recording: false});\r\n      const video = document.getElementById(\"video\");\r\n      video.srcObject = stream;\r\n      video.muted = true;\r\n      video.play();\r\n    }).catch(e => {\r\n      alert(\"이 브라우저는 실시간 녹음 또는 녹화가 지원되지 않습니다. 다른 브라우저를 이용하거나 파일 업로드 기능을 이용해 주세요.\");\r\n      setState({initial: true});\r\n    }); \r\n  };\r\n\r\n  onClickStart = () => {\r\n    const {stream} = this.state;\r\n    let recorder = RecordRTC(stream, config);\r\n    recorder.startRecording();\r\n    this.setState({recorder, recording: true});\r\n  };\r\n  \r\n  onClickFinish = () => {\r\n    const setState = config => this.setState(config);\r\n    const {stream, recorder} = this.state;\r\n    recorder.stopRecording(function() {\r\n      const blob = recorder.getBlob();\r\n      // 비디오 태그에 추가.\r\n      const video = document.getElementById(\"video\");\r\n      video.srcObject = null;\r\n      video.src = URL.createObjectURL(blob);\r\n      video.muted = false;\r\n      video.play();\r\n\r\n\r\n      // 스트림과 레코더 폐기\r\n      stream.stop();\r\n      recorder.destroy();\r\n      setState({recorder: null, stream: null, recording: null, file: blob});\r\n    });\r\n  };\r\n\r\n  onClickReset = () => {\r\n    const {stream, recorder} = this.state;\r\n    // 스트림과 레코더 폐기\r\n    if (stream !== null) stream.stop();\r\n    if (recorder !== null) recorder.destroy();\r\n    this.setState({initial: true, stream: null, recorder: null});\r\n  };\r\n\r\n  onChangeFile = v => {\r\n    const file = v.target.files[0];\r\n    // initial 상태를 풀고, 비디오에 영상을 넣는다.\r\n    this.setState({file, initial: false}, () => {\r\n      console.log(file);\r\n      document.getElementById(\"video\").src = URL.createObjectURL(file);\r\n    });\r\n  };\r\n\r\n  onClickCancel = () => {\r\n    const {stream, recorder} = this.state;\r\n    // 스트림과 레코더 폐기\r\n    if (stream !== null) stream.stop();\r\n    if (recorder !== null) recorder.destroy();\r\n    this.props.onHide();\r\n  };\r\n\r\n  render () {\r\n    const {initial, recording, file} = this.state;\r\n    const {audioOnly} = this.props;\r\n    console.log(this.state);\r\n    return (\r\n      <div style={{\r\n        width: 600, height: 520, \r\n        display: \"flex\", flexDirection: \"column\", \r\n        alignItems: \"center\", justifyContent: \"space-between\",\r\n        padding: 20, backgroundColor: \"#ddd\"\r\n      }}>\r\n        {initial ? (\r\n          <div style={{\r\n            width: 600, height: 400, display: \"flex\", flexDirection: \"column\", \r\n            alignItems: \"center\", justifyContent: \"center\", backgroundColor: \"white\"}}>\r\n            <button onClick={this.onClickDisplay} >실시간 {audioOnly ? \"녹음\" : \"녹화\"}</button>\r\n            <input type=\"file\" accept={audioOnly ? \"audio/*\" : \"video/*\"} onChange={this.onChangeFile} />\r\n            <span>위 버튼을 누르면 <b>영상 촬영</b>을 할 수 있습니다.</span>\r\n            <span>녹음/녹화를 마치신 후 <b>확인</b> 버튼을 눌러주세요.</span>\r\n          </div>\r\n        ) : (\r\n          <video id=\"video\" controls={recording !== false} width={600} height={480} style={{backgroundColor: \"transparent\"}} />\r\n        )}\r\n        <div style={{display: \"flex\", flexDirection: \"row\"}}>\r\n          {initial === false && recording === false? (\r\n            <button onClick={this.onClickStart} >녹음 시작</button>\r\n          ) : null}\r\n          {initial === false && recording === true ? (\r\n            <button onClick={this.onClickFinish} >녹음 종료</button>\r\n          ) : null}\r\n          {initial === false && file !== null ? (\r\n            <a href={URL.createObjectURL(file)} download=\"RecordRTC.mp4\">다운로드</a>\r\n          ) : null}\r\n          {initial === false ? (\r\n            <button onClick={this.onClickReset} >처음부터</button>\r\n          ) : null}\r\n          <button onClick={this.onClickCancel} >취소</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Recorder;","import React from 'react';\n//import { Player } from 'video-react';\nimport \"video-react/dist/video-react.css\";\nimport Recorder from \"./Recorder\";\n\nclass App extends React.Component {\n  state = {\n    showSelect: false,\n    audioOnly: null\n  };\n\n  onClick = () => this.setState({showSelect: true, audioOnly: null});\n  onClickAudio = () => this.setState({showSelect: false, audioOnly: true});\n  onClickVideo = () => this.setState({showSelect: false, audioOnly: false});\n  onHide = () => this.setState({showSelect: false, audioOnly: null});\n\n  render(){\n    const {showSelect, audioOnly} = this.state;\n    return (\n      <div style={{display: \"block\"}}>\n        <h1>RecordRTC 음성/영상 업로드 프로토타입</h1>\n        <button onClick={this.onClick}>음성 혹은 영상으로 입력하기</button>\n        {showSelect ? (\n          <div style={{marginTop: 30, display: \"block\"}}>\n            <button onClick={this.onClickAudio}>음성으로 입력하기</button>\n            <button onClick={this.onClickVideo}>영상으로 입력하기</button>\n          </div>\n        ) : null}\n        {audioOnly !== null ? (\n          <Recorder audioOnly={audioOnly} onHide={this.onHide}/>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}